ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank())
ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank())
ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank())
ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank()
ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank()))
ggplot(data=df, aes(x=players, y=averages), scale_fill_manual(values = c("Win" = "green", "Loss" = "red")) + geom_bar(aes(fill=result), stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_cartesian(ylim = c(60,105)) + ylab("Average") + theme(axis.title.x = element_blank()))
?scale_fill_manual
plot <- ggplot(data=df, aes(x=players, y=averages))
plot + scale_colour_manual(values = c("green", "red"))
plot + scale_colour_manual(values = c("green", "red")) + geom_bar(aes(fill=result))
plot + scale_colour_manual(values = c("green", "red")) + geom_bar(aes(fill=result), stat="identity")
plot + scale_fill_manual(values = c("green", "red")) + geom_bar(aes(fill=result), stat="identity")
levels(df$result)
df$result <- factor(df$result, levels(df$result)[2,1])
df$result <- factor(df$result, levels(df$result)[c(2,1)])
levels(df$result)
plot + scale_fill_manual(values = c("green", "red")) + geom_bar(aes(fill=result), stat="identity")
levels(df$result)
plot + scale_fill_manual(values = c("green", "red")) + geom_bar(aes(fill=result), stat="identity")
setwd("/Users/JackPeacock/datasciencecoursera/Getting\ and\ Cleaning\ Data/Course\ Project")
## library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mean()", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
read.table(finalDf, "finaltable.txt")
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mean()", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
read.table(finalDf, "finaltable.txt")
getwd()
head(finalDf)
read.table(finalDf, "finaltable.txt")
list.files()
read.table(finalDf, file="finaltable.txt")
read.table(finalDf, "finaltable.txt")
finalDf <- read.table("finaltable.txt")
finalDf
colnames(finalDf)
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
colnames(finalDf) <- sub(".","", colnames(finalDf))
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf <- read.table("finaltable.txt")
finalDf
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
finalDf
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
finalDf
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf)
colnames(finalDf) <- sub("std","StD", colnames(finalDf), fixed=TRUE)
colnames(finalDf)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
colnames(finalDf)
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf <- read.table("finaltable.txt")
finalDf
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub(".","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: The columns have already been appropriately labelled
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
colnames(finalDf) <- sub("()","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: Column names are cleaned up slightly to remove punctuation.
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
colnames(finalDf) <- sub("()","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("t","Time", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("f","Freq", colnames(finalDf), fixed=TRUE)
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: Column names are cleaned up slightly to remove punctuation.
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
colnames(finalDf) <- sub("()","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("t","Time", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("f","Freq", colnames(finalDf), fixed=TRUE)
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalTable
finalDf
getwd()
library(plyr)
## Get test data
testDf <- read.table("./UCI HAR Dataset/test/X_test.txt")
testSubjectsVector <- scan("./UCI HAR Dataset/test/subject_test.txt")
testActivityVector <- scan("./UCI HAR Dataset/test/y_test.txt")
featuresDf <-read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
testDf <- cbind(testSubjectsVector, testActivityVector, testDf)
colnames(testDf) <- c("Subject", "Activity", featuresDf$V2)
## Get train data
trainDf <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainSubjectsVector <- scan("./UCI HAR Dataset/train/subject_train.txt")
trainActivityVector <- scan("./UCI HAR Dataset/train/y_train.txt")
trainDf <- cbind(trainSubjectsVector, trainActivityVector, trainDf)
colnames(trainDf) <- c("Subject", "Activity", featuresDf$V2)
## According to David Hood (Community TA) - files in inertial folder are not
## required here. Now row binding the two frames
fullDf <- rbind(testDf, trainDf)
## Find the column names which end with "mean()" or "std()"
meanCols <- grep("-mea", colnames(fullDf), fixed = TRUE)
sdCols <- grep("std()", colnames(fullDf), fixed = TRUE)
## These are the columns needed along with the first 2 which label subject and
## acitivity.
colsNeeded <- c(1, 2, meanCols, sdCols)
## Then select those columns out.
fullDf <- fullDf[,colsNeeded]
## Get the activity labels
activityLabels = read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
fullDf[,2] <- mapvalues(fullDf[,2], from = activityLabels[,1], to = activityLabels[,2])
## Step 5: Column names are cleaned up slightly to remove punctuation.
## Column name descriptions will be available in the code book.
finalDf = data.frame(matrix(ncol = ncol(fullDf)-2, nrow = 30 + nrow(activityLabels)))
colnames(finalDf) <- c(colnames(fullDf)[c(3:ncol(fullDf))])
colnames(finalDf) <- sub("()","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- gsub("-","", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("mean","Mean", colnames(finalDf), fixed=TRUE)
colnames(finalDf) <- sub("std","Std", colnames(finalDf), fixed=TRUE)
rowNames = vector()
for (i in c(1:30)) {
rowNames <- c(rowNames, paste("Subject", toString(i)))
}
rownames(finalDf) <- c(activityLabels[,2], rowNames)
for (i in activityLabels[,2]) {
subset <- fullDf[fullDf$Activity == i,c(3:ncol(fullDf))]
finalDf[i,] = colMeans(subset)
}
for (i in c(1:30)) {
subset <- fullDf[fullDf$Subject == i, c(3:ncol(fullDf))]
finalDf[rowNames[i],] = colMeans(subset)
}
write.table(finalDf, "finaltable.txt")
finalDf
